{
  "version": 3,
  "sources": ["external-global:@serenity-is/extensions", "external-global:@serenity-is/corelib/slick", "external-global:@serenity-is/sleekgrid", "../../../../../Modules/MovieDB/Movie/MoviePage.ts", "../../../../../Modules/MovieDB/Movie/MovieGrid.ts", "../../../../../Modules/MovieDB/Movie/MovieDialog.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "module.exports = Slick;", "module.exports = Slick;", "\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { MovieGrid } from './MovieGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new MovieGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid, LookupEditor, QuickSearchField } from '@serenity-is/corelib';\r\nimport { MovieColumns, MovieForm, MovieRow, MovieService } from '../../ServerTypes/MovieDB';\r\nimport { MovieDialog } from './MovieDialog';\r\nimport { ExcelExportHelper, PdfExportHelper, ReportHelper } from \"@serenity-is/extensions\";\nimport { MovieListRequest } from '../../ServerTypes/MovieDB/MovieListRequest'; //'../../ServerTypes/MovieDB/MovieListRequest';\nimport { Aggregators } from \"@serenity-is/corelib/slick\";\nimport { GroupItemMetadataProvider } from \"@serenity-is/sleekgrid\";\r\nimport { coalesce, first, formatNumber, initFullHeightGridPage } from \"@serenity-is/corelib/q\";\n\r\n@Decorators.registerClass('SerenePoC.MovieDB.MovieGrid')\r\nexport class MovieGrid extends EntityGrid<MovieRow, any> {\r\n    protected getColumnsKey() { return MovieColumns.columnsKey; }\r\n    protected getDialogType() { return MovieDialog; }\r\n    protected getRowDefinition() { return MovieRow; }\r\n    protected getService() { return MovieService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n\n    protected getQuickFilters() {\r\n        let items = super.getQuickFilters();\r\n\r\n        const genreListFilter = first(items, x =>\r\n            x.field == MovieRow.Fields.GenreList);\r\n\r\n        genreListFilter.handler = h => {\r\n            const request = (h.request as MovieListRequest);\r\n            const values = (h.widget as LookupEditor).values;\r\n            request.Genres = values.map(x => parseInt(x, 10));\r\n            h.handled = true;\r\n        };\r\n\r\n        return items;\r\n    }\n\n    protected getQuickSearchFields(): QuickSearchField[] {\r\n        return [\r\n            { name: \"\", title: \"all\" },\r\n            { name: \"Description\", title: \"description\" },\r\n            { name: \"Storyline\", title: \"storyline\" },\r\n            { name: \"Year\", title: \"year\" }\r\n        ];\r\n    }\n\n    createSlickGrid() {\r\n        var grid = super.createSlickGrid();\r\n\r\n        // need to register this plugin for grouping or you'll have errors\r\n        grid.registerPlugin(new GroupItemMetadataProvider());\r\n\r\n        this.view.setSummaryOptions({\r\n            aggregators: [\r\n                new Aggregators.Avg('Runtime'),\r\n                new Aggregators.Sum('Runtime'),\r\n                new Aggregators.Max('Runtime')\r\n            ]\r\n        });\r\n\r\n        return grid;\r\n    }\n\n    getColumns() {\r\n        var columns = super.getColumns();\r\n\r\n        first(columns, x => x.field === 'Runtime')\r\n            .groupTotalsFormatter = (totals, col) =>\r\n                (totals.avg ? ('avg: ' + coalesce(formatNumber(totals.avg[col.field], '0.'), '')) : '');\r\n\r\n        return columns;\r\n    }\n\n    getSlickOptions() {\n        var opt = super.getSlickOptions();\n        opt.showFooterRow = true;\n        return opt;\r\n    }\n\n    getButtons() {\n        var buttons = super.getButtons();\n        var myRow = MovieRow.Fields;\n\n        buttons.push(ExcelExportHelper.createToolButton({\n            grid: this,\n            service: MovieService.baseUrl + '/ListExcel',\n            onViewSubmit:() => this.onViewSubmit(),\n            separator: true\r\n        }));\n\n        buttons.push(PdfExportHelper.createToolButton({\n            grid: this,\n            onViewSubmit: () => this.onViewSubmit()\n        }));\n\n        buttons.push({\n            title: 'Group By Year',\r\n            cssClass: 'expand-all-button',\r\n            onClick: () => this.view.setGrouping(\r\n                [{\r\n                    getter: 'Year'\r\n                }])\r\n        });\n\n        buttons.push({\n            title: 'No Grouping',\n            cssClass: 'collapse-all-button',\n            onClick: () => this.view.setGrouping([])\r\n        });\n\n        return buttons;\r\n    }\r\n}\n", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { MovieForm, MovieRow, MovieService } from '../../ServerTypes/MovieDB';\r\n\r\n@Decorators.registerClass('SerenePoC.MovieDB.MovieDialog')\r\nexport class MovieDialog extends EntityDialog<MovieRow, any> {\r\n    protected getFormKey() { return MovieForm.formKey; }\r\n    protected getRowDefinition() { return MovieRow; }\r\n    protected getService() { return MovieService.baseUrl; }\r\n\r\n    protected form = new MovieForm(this.idPrefix);\r\n}"],
  "mappings": "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",
  "names": ["require_extensions", "__commonJSMin", "exports", "module", "require_slick", "__commonJSMin", "exports", "module", "require_sleekgrid", "__commonJSMin", "exports", "module", "import_q", "import_corelib", "import_corelib", "MovieDialog", "MovieForm", "MovieRow", "MovieService", "__name", "__decorateClass", "import_extensions", "import_slick", "import_sleekgrid", "import_q", "MovieGrid", "MovieColumns", "MovieDialog", "MovieRow", "MovieService", "container", "items", "genreListFilter", "x", "h", "request", "values", "grid", "columns", "totals", "col", "opt", "buttons", "myRow", "__name", "__decorateClass", "pageInit", "MovieGrid", "__name"]
}
